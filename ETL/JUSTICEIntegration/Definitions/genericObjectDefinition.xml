<?xml version="1.0"?>
    <definition id="GEO10001" isAbstract="true" type="object">
        <fields>
			<!-- headers and tooltip -->
            <field name="default_header" type="ANY" label="OBJECT_DEFAULT_HEADER" mandatory="false" displayType="system" dmsType="FORBIDDEN" />
            <field name="compact_header" type="an..4096" label="OBJECT_COMPACT_HEADER" mandatory="false" displayType="system" dmsType="FORBIDDEN" />
            <field name="breadcrumb_header" type="an..4096" label="OBJECT_BREADCRUMB_HEADER" mandatory="false" displayType="system" dmsType="FORBIDDEN" />
            <field name="tooltip_header" type="an..4096" label="OBJECT_TOOLTIP_HEADER" mandatory="false" displayType="system" dmsType="FORBIDDEN" />

			<!-- system fields -->
    	    <field name="emf:isDeleted" type="boolean"  displayType="system" uri="emf:isDeleted" dmsType="FORBIDDEN"><value>false</value></field>
            <!-- this emf:ui2 property is added just to be registered in the graphdb and to be treated as property and to return it when instances are returned -->
            <field name="emf:ui2" type="an..10"  displayType="system" uri="emf:ui2" dmsType="FORBIDDEN"></field>
			<field name="rdf:type" 		type="URI" displayType="system" uri="rdf:type" dmsType="FORBIDDEN" />
			<field name="viewDefinition" type="an..20" label="viewDefinition.label" displayType="system"  uri="emf:viewDefinition"><value>commonDocument</value></field>
            <field name="defaultView" 	type="an..50" displayType="system"  uri="emf:defaultView" />
            <field name="defaultViewLocation" type="an..100" displayType="system"  uri="emf:defaultViewLocation" />
            <field name="thumbnailImage" type="an..1024" displayType="system"  uri="emf:thumbnailImage" />
            <field name="activityId" type="an..180" label="activityId.label" displayType="system" uri="emf:activityId" />
	        <field name="transitionMatrix" type="an..1024" label="transitionMatrix.label" displayType="system" uri="emf:transitionMatrix" />
			<field name="outcome" type="an..50" codelist="CL9" displayType="readOnly" label="outcome.label" previewEmpty="false" uri="emf:outcome" />
			<field name="integrated" type="boolean" label="integrated.label" displayType="hidden" uri="emf:integrated">
				<value>false</value>
			</field>
			<field name="uri" type="an..50" label="uri.label" displayType="hidden" tooltip="uri.tooltip" uri="emf:uri" />
			
			<!-- general fields for each primary object -->
			<field name="identifier" 	type="an..50" label="uniqueIdentifier.label" mandatory="false" displayType="readOnly" rnc="${seq({+objectSequence})}" uri="dcterms:identifier" />
            <field name="type" 			type="an..50" codelist="CL7" label="type.label" mandatory="false"  displayType="readonly" dmsType="emf:type" uri="emf:type">
                <value>GEO10001</value>
            </field>
			<field name="title" 	 	type="an..100" label="title.label" mandatory="true" displayType="editable" previewEmpty="false" dmsType="cm:title" uri="dcterms:title"/>
			<field name="status" 		type="an..50" codelist="CL10" label="status.label" mandatory="false" displayType="system" previewEmpty="false" dmsType="emf:status" uri="emf:status" />
			<field name="description" 	type="an..1024" label="description.label" displayType="editable" previewEmpty="false" dmsType="cm:description" uri="dcterms:description"/>
			<field name="createdOn" 	type="dateTime" label="createdOn.label" displayType="hidden" dmsType="-cm:created" uri="emf:createdOn" />
    	    <field name="createdBy" 	type="uri" label="createdBy.label" displayType="hidden" dmsType="-cm:creator" uri="emf:createdBy" >
    	        <control id="PICKER">
	    			<control-param id="range" name="range">emf:User</control-param>
	    		</control>
	        </field>
    	              
            <field name="modifiedOn" 	type="datetime" label="modifiedOn.label" displayType="readOnly" previewEmpty="false" dmsType="-cm:modified"  uri="emf:modifiedOn"/>
            <field name="modifiedBy" 	type="uri" label="modifiedBy.label" displayType="readOnly" previewEmpty="false" dmsType="-cm:modifier" uri="emf:modifiedBy">
   	    		<control id="PICKER">
	    			<control-param id="range" name="range">emf:User</control-param>
	    		</control>
		   </field>
		   <field name="completedOn" type="datetime" displayType="hidden" label="completedOn.label" previewEmpty="false" dmsType="-cm:completed" uri="emf:completedOn" />
			
			<!-- object fields -->
            <field name="defaultTemplate" type="an..50" displayType="system" dmsType="dom:defaultTemplate" uri="emf:defaultTemplate">
                <value>GEO10001</value>
            </field>
            <field name="emf:version" 	type="an..10" label="object.version" displayType="hidden" dmsType="FORBIDDEN" uri="emf:version"/>         
    		<field name="emf:revisionNumber" type="an..10" label="revisionNumber.label" displayType="system" dmsType="FORBIDDEN" uri="emf:revisionNumber"/>
			
			<field name="hasParent" type="uri" label="hasParent" mandatory="false" displayType="readOnly" multiValued="true" previewEmpty="false" uri="emf:hasParent" >
				<control id="PICKER">
					<control-param id="range" name="range">emf:Project,emf:Case,emf:Document,emf:Audio,emf:Video,emf:Image,emf:Task,emf:User,emf:Group</control-param>
				</control>
			</field>
			<field name="hasThumbnail" type="uri" label="hasThumbnail" mandatory="false" displayType="readOnly" previewEmpty="false" uri="emf:hasThumbnail" >
				<control id="PICKER">
					<control-param id="range" name="range">emf:Image</control-param>
				</control>
			</field>
			<field name="hasRevision" type="uri" label="hasRevision.label" mandatory="false" displayType="readonly" multiValued="true" previewEmpty="false" uri="emf:hasRevision" >
				<control id="PICKER">
	    		</control>
	    	</field>
			<field name="isRevisionOf" type="uri" label="isRevisionOf.label" mandatory="false" displayType="readonly" previewEmpty="false" uri="emf:isRevisionOf" >
				<control id="PICKER">
	    		</control>
	    	</field>
			<field name="lastPublishedRevision" type="uri" label="lastPublishedRevision.label" mandatory="false" displayType="readonly" previewEmpty="false" uri="emf:lastPublishedRevision" >
				<control id="PICKER">
	    		</control>
	    	</field>
			<field name="lastRevision" type="uri" label="lastRevision.label" mandatory="false" displayType="readonly" previewEmpty="false" uri="emf:lastRevision" >
				<control id="PICKER">
	    		</control>
	    	</field>
			<field name="nextRevision" type="uri" label="nextRevision.label" mandatory="false" displayType="readonly" previewEmpty="false" uri="emf:nextRevision" >
				<control id="PICKER">
	    		</control>
	    	</field>
 			<field name="previousRevision" type="uri" label="previousRevision.label" mandatory="false" displayType="readonly" previewEmpty="false" uri="emf:previousRevision" >
				<control id="PICKER">
	    		</control>
	    	</field> 
	    	<field name="partOf" type="uri" label="partOf.label" mandatory="false" displayType="readOnly" multiValued="true" previewEmpty="false" uri="ptop:partOf" >
     			<control id="PICKER">
      				<control-param id="range" name="range"></control-param>
     			</control>
    		</field>
     		<field name="hasTemplate" type="uri" label="hasTemplate" mandatory="false" displayType="readOnly" multiValued="false" previewEmpty="false" uri="emf:hasTemplate"/>
        </fields>
        <transitions>
			<transition id="editDetails" label="editDetails.label" eventId="editDetails" purpose="editDetails" tooltip="editDetails.tooltip" />
            <transition id="delete" label="delete.label" eventId="delete" purpose="delete" confirmation="confirmation.action" tooltip="delete.tooltip" />
			<transition id="saveAsTemplate" label="saveAsTemplate.label" eventId="saveAsTemplate" purpose="saveAsTemplate" tooltip="saveAsTemplate.tooltip" />
			<transition id="move" label="move.label" eventId="move" purpose="move" tooltip="move.tooltip" />
			<transition id="lock" label="lock.label" eventId="lock" purpose="lock" tooltip="lock.tooltip" />
			<transition id="unlock" label="unlock.label" eventId="unlock" purpose="unlock" tooltip="unlock.tooltip" />
			<transition id="managePermissions" label="managePermissions.label" eventId="managePermissions" purpose="managePermissions" tooltip="managePermissions.tooltip" />
            <transition id="addThumbnail" label="addThumbnail.label" eventId="addThumbnail" purpose="addThumbnail" tooltip="addThumbnail.tooltip" />	
			<transition id="print" label="print.label" eventId="print" purpose="print" tooltip="print.tooltip" />
			<transition id="printTab" label="printTab.label" eventId="printTab" purpose="printTab" tooltip="printTab.tooltip" />
			<transition id="exportTabPDF" label="exportTabPDF.label" eventId="exportTabPDF" purpose="exportTabPDF" tooltip="exportTabPDF.tooltip" />
			<transition id="exportPDF" label="exportPDF.label" eventId="exportPDF" purpose="exportPDF" tooltip="exportPDF.tooltip" />
			<transition id="exportWord" label="exportWord.label" eventId="exportWord" purpose="exportWord" tooltip="exportWord.tooltip" />
	  	 	<transition id="exportTabWord" label="exportTabWord.label" eventId="exportTabWord" purpose="exportTabWord" tooltip="exportTabWord.tooltip" />
			<transition id="clone" label="clone.label" eventId="clone" purpose="clone" tooltip="clone.tooltip" />
			<transition id="publish" label="publish.label" eventId="publish" purpose="publish" tooltip="publish.tooltip" />
			<transition id="publishAsPdf" label="publishAsPdf.label" eventId="publishAsPdf" purpose="publishAsPdf" tooltip="publishAsPdf.tooltip"/>			
			<transition id="createInContext" eventId="createInContext" purpose="createInContext" label="createInContext.label" displayType="hidden" />
        	<transition id="revertVersion" label="revertVersion.label" eventId="revertVersion" purpose="revertVersion" confirmation="revert.confirmation.action" tooltip="revertVersion.tooltip"/>
        </transitions>
		<stateTransitions>		
			<stateTransition from="INIT" transition="create" to="DRAFT" />
			<stateTransition from="INIT" transition="clone" to="DRAFT"/>
			
			<stateTransition from="DRAFT" transition="editDetails" to="DRAFT" />
			<stateTransition from="DRAFT" transition="delete" to="DRAFT" />			
			<stateTransition from="DRAFT" transition="saveAsTemplate" to="DRAFT" />
			<stateTransition from="DRAFT" transition="approve" to="APPROVED"/>
			<stateTransition from="DRAFT" transition="reject" to="REJECTED"/>  			
			<stateTransition from="DRAFT" transition="move" to="DRAFT"/>
			<stateTransition from="DRAFT" transition="lock" to="DRAFT"/>
			<stateTransition from="DRAFT" transition="unlock" to="DRAFT"/>			
			<stateTransition from="DRAFT" transition="managePermissions" to="DRAFT" />
			<stateTransition from="DRAFT" transition="addThumbnail" to="DRAFT" />
			<stateTransition from="DRAFT" transition="publish" to="APPROVED">
				<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
				<condition renderAs="PROPERTY" id="emf:revisionType">emf:latestRevision</condition>
			</stateTransition>
			<stateTransition from="DRAFT" transition="publish" to="DRAFT"/>			
			<stateTransition from="DRAFT" transition="publishAsPdf" to="APPROVED">
				<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
				<condition renderAs="PROPERTY" id="emf:revisionType">emf:latestRevision</condition>
			</stateTransition>
			<stateTransition from="DRAFT" transition="publishAsPdf" to="DRAFT"/>
			<stateTransition from="DRAFT" transition="print" to="DRAFT" />
			<stateTransition from="DRAFT" transition="printTab" to="DRAFT" />
			<stateTransition from="DRAFT" transition="exportTabPDF" to="DRAFT" />
			<stateTransition from="DRAFT" transition="exportPDF" to="DRAFT" />
			<stateTransition from="DRAFT" transition="exportWord" to="DRAFT" />
			<stateTransition from="DRAFT" transition="exportTabWord" to="DRAFT" />
			<stateTransition from="DRAFT" transition="clone" to="DRAFT" />
			<stateTransition from="DRAFT" transition="createInContext" to="DRAFT"/>
			<stateTransition from="DRAFT" transition="revertVersion" to="DRAFT" />

			<stateTransition from="APPROVED" transition="delete" to="APPROVED" />
			<stateTransition from="APPROVED" transition="saveAsTemplate" to="APPROVED" />							
			<stateTransition from="APPROVED" transition="managePermissions" to="APPROVED" />
			<stateTransition from="APPROVED" transition="publish" to="APPROVED">
				<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
				<condition renderAs="PROPERTY" id="emf:revisionType">emf:latestRevision</condition>
			</stateTransition>
			<stateTransition from="APPROVED" transition="publish" to="DRAFT"/>			
			<stateTransition from="APPROVED" transition="publishAsPdf" to="APPROVED">
				<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
				<condition renderAs="PROPERTY" id="emf:revisionType">emf:latestRevision</condition>
			</stateTransition>
			<stateTransition from="APPROVED" transition="publishAsPdf" to="DRAFT"/>			
			<stateTransition from="APPROVED" transition="print" to="APPROVED" />
			<stateTransition from="APPROVED" transition="printTab" to="APPROVED" />
			<stateTransition from="APPROVED" transition="exportTabPDF" to="APPROVED" />
			<stateTransition from="APPROVED" transition="exportPDF" to="APPROVED" />
			<stateTransition from="APPROVED" transition="exportWord" to="APPROVED" />
			<stateTransition from="APPROVED" transition="exportTabWord" to="APPROVED" />
			<stateTransition from="APPROVED" transition="clone" to="APPROVED" />
		
			<stateTransition from="OBSOLETE" transition="download" to="OBSOLETE"/>
			<stateTransition from="OBSOLETE" transition="saveAsTemplate" to="OBSOLETE"/>
			<stateTransition from="OBSOLETE" transition="print" to="OBSOLETE"/>
			<stateTransition from="OBSOLETE" transition="printTab" to="OBSOLETE"/>
			<stateTransition from="OBSOLETE" transition="exportTabPDF" to="OBSOLETE"/>				
			<stateTransition from="OBSOLETE" transition="exportPDF" to="OBSOLETE"/>
			<stateTransition from="OBSOLETE" transition="exportWord" to="OBSOLETE" />
			<stateTransition from="OBSOLETE" transition="exportTabWord" to="OBSOLETE" />
			<stateTransition from="OBSOLETE" transition="managePermissions" to="OBSOLETE" />
			<stateTransition from="OBSOLETE" transition="clone" to="OBSOLETE" />
			
			<stateTransition from="*" transition="delete" to="DELETED" />
			<stateTransition from="*" transition="obsolete" to="OBSOLETE" />				
        </stateTransitions>	
        <labels>
    		<label id="OBJECT_TOOLTIP_HEADER">
    			<value lang="en"><![CDATA[${eval(#{eval(
                    <span class="thumbnail-content">
                        <img class="thumbnail" src="${thumbnailUri(64)}" />
                    </span>
                    <span class="tooltip-data">
                        <span class="tooltip-header">
                            <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
                                (<span data-type="${get([type])}">${CL([type])}</span>) 
                                <span data-title="${get([title])}">${get([title])}</span>
                            </a>
                        </span>
                        <span class="tooltip-row">
                            <label>Images associated: </label>
                            <span data-property="images">#{query(customQueries/countAssosiations, objectUri=${id.db}, countedType=emf:Image)}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Version: </label>
                            <span data-property-version="emf:version">${get([emf:version])}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Revision: </label>
                            <span data-property="emf:revisionNumber">${get([emf:revisionNumber])}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Modified by: </label>
                            <span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Modified on: </label>
                            <span data-property="modifiedOn">${date([modifiedOn]).format(dd.MM.yyyy, HH:mm)}</span>
                        </span>
                    </span>
                )})}]]></value>
                <value lang="bg"><![CDATA[${eval(#{eval(
                    <span class="thumbnail-content">
                        <img class="thumbnail" src="${thumbnailUri(64)}" />
                    </span>
                    <span class="tooltip-data">
                        <span class="tooltip-header">
                            <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
                                (<span data-type="${get([type])}">${CL([type])}</span>) 
                                <span data-title="${get([title])}">${get([title])}</span>
                            </a>
                        </span>
                        <span class="tooltip-row">
                            <label>Асоциирани изображения: </label>
                            <span data-property="images">#{query(customQueries/countAssosiations, objectUri=${id.db}, countedType=emf:Image)}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Версия: </label>
                            <span data-property-version="emf:version">${get([emf:version])}</span>
                        </span>
                         <span class="tooltip-row">
                            <label>Ревизия: </label>
                            <span data-property="emf:revisionNumber">${get([emf:revisionNumber])}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Последно актуализиран от: </label>
                            <span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Последно актуализиран на: </label>
                            <span data-property="modifiedOn">${date([modifiedOn]).format(dd.MM.yyyy, HH:mm)}</span>
                        </span>
                    </span>
                )})}]]></value>
    		</label>
             <label id="OBJECT_DEFAULT_HEADER">
                <value lang="en"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
                ${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
                ${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
                <span ><img src="${thumbnailUri(64)}"/></span>
                <span>
                    <span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
                        <a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
							${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span>)}
                            ${if(${or(${var.isLatest} or ${var.isRevision})}).then(
                            <b>
                                Revision: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span>&nbsp;
                                (<span data-property="status">${CL([status])}</span>)&nbsp;
                                (<span data-property="type">${CL([type])}</span>)&nbsp;
                                <span data-property="title">${get([title])}</span>&nbsp;
                            </b>
                            ).else(
                            <b>
                                (<span data-property="type">${CL([type])}</span>)&nbsp;
                                <span data-property="title">${get([title])}</span>&nbsp;
                                (<span data-property="status">${CL([status])}</span>)&nbsp;
                            </b>
                            )}							<b>
							${if(${var.isVersion}).then(
								<span data-property="emf:version">${get([emf:version])}</span>
							)}
							</b>

                        </a>
                    </span>
                    <br />Last modified by: <a href="${userLink(${get([modifiedBy])})}">${user(${get([modifiedBy])})}</a>, ${date([modifiedOn]).format(dd.MM.yyyy, HH:mm)} 
					${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
                </span>)}]]></value>
                <value lang="bg"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
                ${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
                ${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
                <span ><img src="${thumbnailUri(64)}"/></span>
                <span>
                    <span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
                        <a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
							${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span>)}
                            ${if(${or(${var.isLatest} or ${var.isRevision})}).then(
                            <b>
                                Ревизия: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span>&nbsp;
                                (<span data-property="status">${CL([status])}</span>)&nbsp;
                                (<span data-property="type">${CL([type])}</span>)&nbsp;
                                <span data-property="title">${get([title])}</span>&nbsp;
                            </b>
                            ).else(
                            <b>
                                (<span data-property="type">${CL([type])}</span>)&nbsp;
                                <span data-property="title">${get([title])}</span>&nbsp;
                                (<span data-property="status">${CL([status])}</span>)&nbsp;
                            </b>
                            )}
							<b>
							${if(${var.isVersion}).then(
								<span data-property="emf:version">${get([emf:version])}</span>
							)}
							</b>
                        </a>
                    </span>
                    <br />Последно модифицирана от: <a href="${userLink(${get([modifiedBy])})}">${user(${get([modifiedBy])})}</a>, ${date([modifiedOn]).format(dd.MM.yyyy, HH:mm)} 
					${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
                </span>)}]]></value>
            </label>
            <label id="OBJECT_COMPACT_HEADER">
                <value lang="en"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
                ${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
                ${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
                <span ><img src="${thumbnailUri(16)}"/></span>
                ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)} 
				<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
							Revision: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span>&nbsp;
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
						).else(
							<span data-property="type">(${CL([type])})</span>&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
						)}
						${if(${var.isVersion}).then(
							<span data-property="emf:version">${get([emf:version])}</span>
						)}
					</a>
				</span>
				)}]]></value>
                <value lang="bg"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
                ${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
                ${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
                <span><img src="${thumbnailUri(16)}"/></span>
                ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)} 
				<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
							Ревизия: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span>&nbsp;
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
						).else(
							<span data-property="type">(${CL([type])})</span>&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
						)}
						${if(${var.isVersion}).then(
							<span data-property="emf:version">${get([emf:version])}</span>
						)}
					</a>
				</span>
				)}]]></value>
            </label>
            <label id="OBJECT_BREADCRUMB_HEADER">
                <value lang="bg"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
                ${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
                ${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
                <span ><img src="${thumbnailUri(16)}"/></span>
                ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)} 
 				<span>
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
							<span data-property="revisionNumber">Ревизия:${get([emf:revisionNumber])}&nbsp;</span> 
							<span data-property="title">${get([title])}</span>
						).else(
							<span data-property="title">${get([title])}</span>
						)}
					</a>
				</span>)}]]></value>
                <value lang="en"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
                ${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
                ${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
                <span ><img src="${thumbnailUri(16)}"/></span>
                ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)} 
                <span>
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
							<span data-property="revisionNumber">Revision:${get([emf:revisionNumber])}&nbsp;</span> 
							<span data-property="title">${get([title])}</span>
						).else(
							<span data-property="title">${get([title])}</span>
						)}
					</a>
				</span>)}]]></value>
            </label>
	    </labels>
    </definition>
