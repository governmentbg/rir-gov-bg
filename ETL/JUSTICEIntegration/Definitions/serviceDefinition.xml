<?xml version="1.0"?>
<definition id="service" type="object" isAbstract="false" parentId="justiceBgObject" >
	<fields>
		<!-- INSERT HEADERS HERE -->
		<field name="default_header" type="ANY" label="SERVICE_DEFAULT_HEADER" mandatory="false" displayType="system" dmsType="FORBIDDEN" />
		<field name="compact_header" type="an..4096" label="SERVICE_COMPACT_HEADER" mandatory="false" displayType="system" dmsType="FORBIDDEN" />
		<field name="breadcrumb_header" type="an..4096" label="SERVICE_BREADCRUMB_HEADER" mandatory="false" displayType="system" dmsType="FORBIDDEN" />
 		<field name="tooltip_header" type="an..4096" label="SERVICE_TOOLTIP_HEADER" mandatory="false" displayType="system" dmsType="FORBIDDEN" />
		
		<!-- Service specific properties -->
		<field name="type" type="an..50" order="40" label="GEO10001.type" mandatory="false" codelist="CL7" displayType="system" dmsType="emf:type" uri="emf:type" >
			<value>SERVICE</value>
		</field>
		<field name="rdf:type" type="uri" displayType="system" uri="rdf:type" dmsType="FORBIDDEN">
			<value>http://ittruse.ittbg.com/ontology/inventar#InformationalService</value>
		</field>
		<field name="status" type="an..50" codelist="CL134">
			<value>ACTIVE</value>
		</field>
		<field name="identifier" mandatory="false" rnc="${eval(УСЛ-${seq({+serviceSequence})})}" displayType="readOnly" />
		
		<field name="serviceType" type="an..50" label="serviceType.label" mandatory="true" displayType="editable" codelist="CL132" uri="inv:serviceType" />
		<field name="legalGround" type="an..2000" label="legalGround.label" displayType="editable" previewEmpty="true" uri="inv:legalGround" />
		
		<field name="providedUnderContract" type="uri" label="providedUnderContract.label" displayType="editable" previewEmpty="true" multiValued="true" uri="inv:providedUnderContract">
			<control id="PICKER">
				<control-param id="range" name="range">inv:Contract</control-param>
			</control> 
		</field>
		
		<field name="isProvidedBy" type="uri" label="isProvidedBy.label" displayType="editable" previewEmpty="true" multiValued="true" uri="inv:isProvidedBy">
			<control id="PICKER">
				<control-param id="range" name="range">ptop:Organization</control-param>
			</control> 
		</field>
		<field name="usesAsset" type="uri" label="usesAsset.label" displayType="editable" previewEmpty="true" multiValued="true" uri="inv:usesAsset">
			<control id="PICKER">
				<control-param id="range" name="range">inv:Asset</control-param>
			</control> 
		</field>
	</fields>
	
	<stateTransitions>	
		<stateTransition from="INIT" transition="create" to="DRAFT" />	
		
		<stateTransition from="DRAFT" transition="editDetails" to="DRAFT" />
		<stateTransition from="DRAFT" transition="saveAsTemplate" to="DRAFT" />
		<stateTransition from="DRAFT" transition="move" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="lock" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="unlock" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="managePermissions" to="DRAFT" />
		<stateTransition from="DRAFT" transition="addThumbnail" to="DRAFT" />
		<stateTransition from="DRAFT" transition="print" to="DRAFT" />
		<stateTransition from="DRAFT" transition="printTab" to="DRAFT" />
		<stateTransition from="DRAFT" transition="exportTabPDF" to="DRAFT" />
		<stateTransition from="DRAFT" transition="exportPDF" to="DRAFT" />
		<stateTransition from="DRAFT" transition="exportWord" to="DRAFT" />
		<stateTransition from="DRAFT" transition="exportTabWord" to="DRAFT" />
		<stateTransition from="DRAFT" transition="addWatchers" to="DRAFT" />
		<stateTransition from="DRAFT" transition="createInContext" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="delete" to="DELETED" />
		<stateTransition from="DRAFT" transition="revertVersion" to="DRAFT"/>
		
		<stateTransition from="ACTIVE" transition="editDetails" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="saveAsTemplate" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="move" to="ACTIVE"/>
		<stateTransition from="ACTIVE" transition="lock" to="ACTIVE"/>
		<stateTransition from="ACTIVE" transition="unlock" to="ACTIVE"/>
		<stateTransition from="ACTIVE" transition="managePermissions" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="addThumbnail" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="print" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="printTab" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="exportTabPDF" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="exportPDF" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="exportWord" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="exportTabWord" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="addWatchers" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="createInContext" to="ACTIVE"/>
		<stateTransition from="ACTIVE" transition="delete" to="DELETED" />
		<stateTransition from="ACTIVE" transition="revertVersion" to="ACTIVE"/>
		
		<stateTransition from="INACTIVE" transition="editDetails" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="saveAsTemplate" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="move" to="INACTIVE"/>
		<stateTransition from="INACTIVE" transition="lock" to="INACTIVE"/>
		<stateTransition from="INACTIVE" transition="unlock" to="INACTIVE"/>
		<stateTransition from="INACTIVE" transition="managePermissions" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="addThumbnail" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="print" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="printTab" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="exportTabPDF" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="exportPDF" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="exportWord" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="exportTabWord" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="addWatchers" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="createInContext" to="INACTIVE"/>
		<stateTransition from="INACTIVE" transition="delete" to="DELETED" />
    </stateTransitions>
   	<labels>
		<label id="SERVICE_TOOLTIP_HEADER">
    			<value lang="en"><![CDATA[${eval(#{eval(
                    <span class="thumbnail-content">
                        <img class="thumbnail" src="${thumbnailUri(64)}" />
                    </span>
                    <span class="tooltip-data">
                        <span class="tooltip-header">
                            <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
                                (<span data-type="${get([type])}">${CL([type])}</span>) 
                                <span data-title="${get([title])}">${get([title])}</span>
                            </a>
                        </span>
                        <span class="tooltip-row">
                            <label>Identifier: </label>
                            <span data-property="identifier">${get([identifier])}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Service Type: </label>
                            <span data-property="serviceType">${CL([serviceType])}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Version: </label>
                            <span data-property-version="emf:version">${get([emf:version])}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Revision: </label>
                            <span data-property="emf:revisionNumber">${get([emf:revisionNumber])}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Modified by: </label>
                            <span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Modified on: </label>
                            <span data-property="modifiedOn">${date([modifiedOn]).format(dd.MM.yyyy, HH:mm)}</span>
                        </span>
                    </span>
                )})}]]></value>
                <value lang="bg"><![CDATA[${eval(#{eval(
                    <span class="thumbnail-content">
                        <img class="thumbnail" src="${thumbnailUri(64)}" />
                    </span>
                    <span class="tooltip-data">
                        <span class="tooltip-header">
                            <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
                                (<span data-type="${get([type])}">${CL([type])}</span>) 
                                <span data-title="${get([title])}">${get([title])}</span>
                            </a>
                        </span>
                         <span class="tooltip-row">
                            <label>Номер: </label>
                            <span data-property="identifier">${get([identifier])}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Вид: </label>
                            <span data-property="serviceType">${CL([serviceType])}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Версия: </label>
                            <span data-property-version="emf:version">${get([emf:version])}</span>
                        </span>
                         <span class="tooltip-row">
                            <label>Ревизия: </label>
                            <span data-property="emf:revisionNumber">${get([emf:revisionNumber])}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Последно актуализиран от: </label>
                            <span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
                        </span>
                        <span class="tooltip-row">
                            <label>Последно актуализиран на: </label>
                            <span data-property="modifiedOn">${date([modifiedOn]).format(dd.MM.yyyy, HH:mm)}</span>
                        </span>
                    </span>
                )})}]]></value>
		</label>
		<label id="SERVICE_DEFAULT_HEADER">
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			<span ><img src="${thumbnailUri(64)}"/></span>
			<span>
				<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
					<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
							Revision: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span> 
							<span data-property="title">${get([title])}</span>&nbsp;(
							<span data-property="type" style="color:#808080 !important">(${CL([type])})</span>,&nbsp;
							<span data-property="status" style="color:#808080 !important">(${CL([status])})</span>)			
							
						).else(
							<span data-property="title">${get([title])}</span>&nbsp;
							<span style="color:#808080 !important">(</span>
							<span data-property="type" style="color:#808080 !important">${CL([type])}</span>,&nbsp;
							<span data-property="status" style="color:#808080 !important">${CL([status])}</span>
							<span style="color:#808080 !important">)</span>
						)}
					</a>
				</span>
				<br />Service Type: <span data-property="serviceType">${CL([serviceType])}</span>
				<span data-property="isProvidedBy">&nbsp;${objectProperty(${get([isProvidedBy])})}</span>
​				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
			</span>)}]]></value>
			<value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			<span ><img src="${thumbnailUri(64)}"/></span>
			<span>
				<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
					<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
							Ревизия: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span> 
							<span data-property="title">${get([title])}</span>&nbsp;
							<span style="color:#808080 !important">(</span>
							<span data-property="type" style="color:#808080 !important">${CL([type])}</span>,&nbsp;
							<span data-property="status" style="color:#808080 !important">${CL([status])}</span>
							<span style="color:#808080 !important">)</span>
							
						).else(
							<span data-property="title">${get([title])}</span>&nbsp;
							<span style="color:#808080 !important">(</span>
							<span data-property="type" style="color:#808080 !important">${CL([type])}</span>,&nbsp;
							<span data-property="status" style="color:#808080 !important">${CL([status])}</span>
							<span style="color:#808080 !important">)</span>
						)}
					</a>
				</span>
				<br />Вид: <span data-property="serviceType">${CL([serviceType])}</span>
				<span data-property="isProvidedBy">&nbsp;${objectProperty(${get([isProvidedBy])})}</span>
				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
			</span>)}]]></value>
		</label>
		<label id="SERVICE_COMPACT_HEADER">
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			<span ><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)} 
			<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
				<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span>)}
					${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						Revision: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span> 
							<span data-property="title">${get([title])} </span>
							<span data-property="type" style="color:#808080 !important">(${CL([type])})</span>
					).else(
							<span data-property="title">${get([title])} </span>
							<span data-property="type" style="color:#808080 !important">(${CL([type])})</span>
					)}
				</a>
			</span>
			)}]]></value>
			<value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			<span><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)} 
			<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
				<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span>)}
					${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						Ревизия: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span> 
							<span data-property="title">${get([title])} </span>
							<span data-property="type" style="color:#808080 !important">(${CL([type])})</span>
					).else(
							<span data-property="title">${get([title])} </span>
							<span data-property="type" style="color:#808080 !important">(${CL([type])})</span>
					)}
				</a>
			</span>
			)}]]></value>
		</label>
		<label id="SERVICE_BREADCRUMB_HEADER">
			<value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			<span ><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)} 
			<span>
				<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)} ${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}" ${var.href}>
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span>)}
					<span data-property="title">${get([title])} </span>
					<span data-property="type" style="color:#808080 !important">(${CL([type])})</span>
				</a>
			</span>)}]]></value>
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			<span ><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)} 
			<span>
				<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)} ${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}" ${var.href}>
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span>)}
					<span data-property="title">${get([title])} </span>
					<span data-property="type" style="color:#808080 !important">(${CL([type])})</span>
				</a>
			</span>)}]]></value>
		</label>
	</labels> 
</definition>